<!DOCTYPE html>


<link href="assets/ko_fonts/font.css" rel="stylesheet" type="text/css">

<link href="assets/chart/bootstrap.css" rel="stylesheet" type="text/css">
<script src="assets/chart/jquery-1.11.3.min.js"></script>
<script src="assets/chart/bootstrap.js"></script>
<script src="assets/chart/canvasjs.min.js"></script>

<link href="assets/select2/css/select2.min.css" rel="stylesheet" type="text/css">
<link href="assets/select2/css/select2-bootstrap.css" rel="stylesheet" type="text/css">
<script src="assets/select2/js/select2.js" type="text/javascript"></script>

<style>
    .table_label {
        color: blueviolet;
    }

    #freeSpinCount {
        color: blue;
    }

    #bonusSpinCount {
        color: red;
    }

    body {
        font-family: notosans400;
    }

    .red {
        color: red
    }
</style>

<div class="container" style="margin-top:10px;">

    <div class="row">

        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">PRAGMATIC 정품 게임 이력</div>
                <div class="panel-body">

                    <div class="row">

                        <div class="form-group">
                            <label class="col-md-3 control-label" for="name">JSON 파일</label>
                            <div class="col-md-9">
                                <select id="iJsonList" class="form-control" onchange="DrawTable()"></select>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-8">
            <div class="panel panel-primary">
                <div class="panel-heading">분석결과</div>
                <table class="table table-bordered">

                    <tbody>
                        <tr>
                            <td class="table_label">게임횟수</td>
                            <td><span id="data_length"></span>회</td>
                        </tr>
                        <tr>
                            <td class="table_label">시작금액</td>
                            <td><span id="start_balance"></span>원</td>
                            <td class="table_label">마감금액</td>
                            <td><span id="end_balance"></span>원</td>
                            <td class="table_label red">차익</td>
                            <td><span id="diff"></span>원</td>
                        </tr>
                        
                        <tr>
                                <td class="table_label">총배팅</td>
                                <td><span id="total_out"></span>원</td>
                                <td class="table_label">총당첨</td>
                                <td><span id="total_in"></span>원</td>
                                <td class="table_label red">차익</td>
                                <td><span id="inout_diff"></span>원</td>
                            </tr>
                        <tr>
                            <td class="table_label">환수율</td>
                            <td><span id="inout_rtp"></span>%</td>
                        </tr>
                      
                    </tbody>
                </table>
            </div>

        </div>
    </div>



    <div id="chartContainer" style="height: 370px; width: 100%; margin: 10px auto;"></div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        Init();

        $("#iJsonList").select2({
            theme: "bootstrap",
            placeholder: "select a value"
        });
    })

    function Init() {
        InitJsonSelect();
    }

    function InitJsonSelect() {
        $.get('/jsons/sven99998', function (res) {

            var htmlStr = '';

            for (let i = 0; i < res.length; i++) {

                htmlStr += `<option value="${res[i]}">${res[i]}</option>`;
            }

            if (htmlStr == '') {
                htmlStr += `<option>JSON이 존재하지 않습니다.</option>`;
            }

            $("#iJsonList").html(htmlStr);

            DrawTable();
        });
    }

    var startBalance = 0;
    var endBalance = 0;
    function DrawTable() {

        $.ajax({
            type: "get",
            url: "/jsondata/sven99998",
            data: {
                json_file_name: $("#iJsonList").val(),
            },
            dataType: "json",
            success: function (res) {

                var $data1 = [];
                var $data2 = [];
                var $data3 = [];
                var $data4 = [];
                var $data5 = [];

                var winCount = 0;
                var loseCount = 0;

                var calcData = {
                    totalIncome: 0,
                    totalOutgo: 0,
                    rtp: 0
                }

                var prevBalance = 0;
                var firstFlag = true;
                // var dataLength = res.length;
                var dataLength = 2000;

                for (var i = 0; i < dataLength; i++) {


                    if (typeof res[i].Response != "undefined") {

                        let response = res[i].Response;

                        let parseResponse = response.split('&');
                        let parseReq = [];
                        if (res[i].Request) {
                            parseReq = (res[i].Request).split('&');

                        }

                        let responseObj = {};

                        for (let j = 0; j < parseResponse.length; j++) {

                            let keyAndData = parseResponse[j].split("=");

                            if (keyAndData[0] == "balance" || keyAndData[0] == "tw" || keyAndData[0] == "w" || keyAndData[0] == "l" || keyAndData[0] == "c") {

                                keyAndData[1] = parseInt(RemoveImpurities(keyAndData[1]));
                            }

                            responseObj[keyAndData[0]] = keyAndData[1];
                        }
                        let reqObj = {};
                        for (let j = 0; j < parseReq.length; j++) {

                            let keyAndData = parseReq[j].split("=");

                            if (keyAndData[0] == "balance" || keyAndData[0] == "tw" || keyAndData[0] == "w" || keyAndData[0] == "l" || keyAndData[0] == "c") {

                                keyAndData[1] = parseInt(RemoveImpurities(keyAndData[1]));
                            }

                            reqObj[keyAndData[0]] = keyAndData[1];
                        }

                        // console.log(responseObj);

                        if (typeof responseObj.balance != "undefined") {

                            let obj1 = {
                                label: i + "차",
                                y: responseObj.balance,
                                // lineColor: "red",
                                // markerColor: "red",
                            };
                            let obj2 = { y: 0 };
                            let obj3 = { y: 0 };
                            let obj4 = { y: 0 };
                            let obj5 = { y: 0 };

                            if (typeof responseObj.fs != "undefined" && responseObj.fs == 1) {
                                obj1.indexLabel = "FREE";
                            }


                            var betMoney = 0;
                            var betMoney = Number(prevBalance) - Number(responseObj.balance);
                            if(betMoney < 0){
                                betMoney = 0;
                            }

                            if (typeof responseObj.w != "undefined") {
                                obj3.y = responseObj.w;
                            }

                            if (firstFlag) {
                                startBalance = responseObj.balance;
                                prevBalance = responseObj.balance;
                                betMoney = 0;
                                firstFlag = false;
                            }


                            if (reqObj.action == "doCollect" || reqObj.action == "doCollectBonus") {
                                winMoney = Number(responseObj.balance) - Number(prevBalance);

                                calcData.totalIncome += winMoney;
                            }

                            obj2.y = betMoney;
                            calcData.totalOutgo += betMoney;


                            calcData.rtp = calcData.totalIncome / calcData.totalOutgo * 100;
                            calcData.rtp = Math.floor(calcData.rtp * 100);
                            calcData.rtp = calcData.rtp / 100;

                            obj1.label = `${i}차 , RTP: ${calcData.rtp}%`;
                            obj2.label = `${i}차 , RTP: ${calcData.rtp}%`;
                            obj3.label = `${i}차 , RTP: ${calcData.rtp}%`;
                            obj4.label = `${i}차 , RTP: ${calcData.rtp}%`;
                            obj5.label = `${i}차 , RTP: ${calcData.rtp}%`;

                            obj4.y = calcData.totalIncome;
                            obj5.y = calcData.totalOutgo;

                            $data1.push(obj1);
                            $data2.push(obj2);
                            $data3.push(obj3);
                            $data4.push(obj4);
                            $data5.push(obj5);


                            // let obj4 = {
                            //     label: i + "차",
                            //     // y: currentRtp,
                            // };

                            // $data4.push(obj4);
                            prevBalance = responseObj.balance;

                            endBalance = responseObj.balance;
                        }

                        if (typeof responseObj.w != "undefined" && typeof responseObj.fs == "undefined") {

                            if (responseObj.w > 0) {

                                winCount++;
                            } else {

                                loseCount++;
                            }
                        }
                    }

                }

                $("#data_length").html(dataLength.toLocaleString());

                $("#start_balance").html(startBalance.toLocaleString());
                $("#end_balance").html(endBalance.toLocaleString());
                $("#diff").html((endBalance - startBalance).toLocaleString());
                
                $("#total_in").html(calcData.totalIncome.toLocaleString());
                $("#total_out").html(calcData.totalOutgo.toLocaleString());
                $("#inout_diff").html((calcData.totalIncome - calcData.totalOutgo).toLocaleString());

                $("#inout_rtp").html((calcData.rtp).toLocaleString());



                var chart = new CanvasJS.Chart("chartContainer", {
                    // animationEnabled: true,
                    zoomEnabled: true,
                    title: {
                        text: `보유금액`,
                        fontFamily: "notosans400",
                    },
                    axisY: [{
                        title: "보유금",
                        titleFontColor: "#4F81BC",
                        lineColor: "#4F81BC",
                        labelFontColor: "#4F81BC",
                        tickColor: "#4F81BC",
                        crosshair: {
                            enabled: true,
                            snapToDataPoint: true
                        },
                        includeZero: false,
                    },
                    {
                        title: "배팅 및 당첨 내역",
                        titleFontColor: "#4F81BC",
                        lineColor: "#4F81BC",
                        labelFontColor: "#4F81BC",
                        tickColor: "#4F81BC",
                        crosshair: {
                            enabled: true,
                            snapToDataPoint: true
                        },
                        includeZero: false,
                    },
                    {
                        title: "총배출",
                        titleFontColor: "#4F81BC",
                        lineColor: "#4F81BC",
                        labelFontColor: "#4F81BC",
                        tickColor: "#4F81BC",
                        crosshair: {
                            enabled: true,
                            snapToDataPoint: true
                        },
                        // includeZero: false,
                    },

                    ],
                    toolTip: {
                        shared: true
                    },
                    legend: {
                        cursor: "pointer",
                        itemmouseover: function (e) {
                            e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness * 2;
                            e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize + 2;
                            e.chart.render();
                        },
                        itemmouseout: function (e) {
                            e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness / 2;
                            e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize - 2;
                            e.chart.render();
                        },
                        itemclick: function (e) {
                            console.log(e);
                            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                                e.dataSeries.visible = false;
                            } else {
                                e.dataSeries.visible = true;
                            }
                            e.chart.render();
                        }
                    },
                    data: [{
                        type: "line",
                        name: "보유금",
                        legendText: "보유금",
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data1
                    },
                    {
                        type: "column",
                        name: "배탱액",
                        legendText: "배탱액",
                        axisYIndex: 1,
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data2
                    },
                    {
                        type: "column",
                        name: "당첨액",
                        legendText: "당첨액",
                        axisYIndex: 1,
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data3
                    },
                    {
                        type: "line",
                        name: "총당첨",
                        legendText: "총당첨",
                        axisYIndex: 2,
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data4,
                    }, {
                        type: "line",
                        name: "총배팅",
                        legendText: "총배팅",
                        axisYIndex: 2,
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data5,
                    }

                    ]
                });

                chart.render();
            },
            error: function (err) {
                console.log(err);
            }
        });
    }

    function RemoveImpurities(numberStr) {

        // let clearStr = numberStr;

        // for (let i = 0; i < clearStr.length; i++) {

        //     // if (Number(clearStr[i]).toString() == "NaN" && clearStr[i] != ".") {

        //     //     clearStr = clearStr.replace(clearStr[i], "");
        //     // }


        // }
        var clearStr = numberStr.replace(/,/g, "");

        return Number(clearStr);
    }

</script>