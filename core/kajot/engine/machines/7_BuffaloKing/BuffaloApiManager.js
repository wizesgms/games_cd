var Util = require("../../../utils/slot_utils");

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        def_s: "9,3,11,6,6,11,5,9,11,4,6,12,4,9,9,6,8,11,12,9,9,1,3,13",
        balance: "100,000.00",
        cfgs: "1",
        ver: "2",
        index: "1",
        balance_cash: "100,000.00",
        def_sb: "3,4,7,6,8,4",
        reel_set_size: "9",
        def_sa: "8,7,5,3,7,5",
        reel_set: "0",
        balance_bonus: "0.00",
        na: "s",
        scatters: "1~0,0,0,0,0,0~100,25,15,8,0,0~1,1,1,1,1,1",
        gmb: "0,0,0",
        rt: "d",
        stime: "1629426866904",
        sa: "8,7,5,3,7,5",
        sb: "3,4,7,6,8,4",
        sc: "5.00,10.00,20.00,30.00,40.00,50.00,80.00,100.00,200.00,400.00,800.00,1500.00,2500.00",
        defc: "50.00",
        sh: "4",
        wilds: "2~0,0,0,0,0,0~1,1,1,1,1,1",
        bonuses: "0",
        fsbonus: "",
        c: "50.00",
        sver: "5",
        counter: "2",
        paytable: "0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;300,250,200,80,0,0;250,200,100,60,0,0;250,200,100,60,0,0;200,120,80,40,0,0;200,120,80,40,0,0;120,80,40,20,0,0;120,80,40,20,0,0;100,60,30,10,0,0;100,60,30,10,0,0;80,40,20,10,0,0;80,40,20,10,0,0",
        l: "40",
        rtp: "96.06",
        total_bet_max: "4,500,000.00",
        reel_set0: "3,3,3,3,8,7,10,9,9,4,11,8,8,10,6,9,1,11,11,5,5,10,12,10,11,6,6,6,4,13,13,7,7,7,12,10,6,13,4,11,11,10,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,8,8,7,7,7,13,13,5,5,5,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,6,8,10,6,9,1,11,11,5,5,10,6,6,6,12,10,11,4,13,13,7,7,7,12,10,6,2,4,11,11,10,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,8,8,13,13,7,7,7,5,5,5,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,6,8,10,6,9,1,11,11,5,5,10,12,10,11,4,13,13,7,7,7,12,10,6,2,4,11,11,10,6,6,6,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,5,5,5,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,7,7,7,8,8,13,13,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3",
        s: "9,3,11,6,6,11,5,9,11,4,6,12,4,9,9,6,8,11,12,9,9,1,3,13",
        reel_set2: "12,12,7,9,5,13,13,7,9,12,3,3,3,3,13,13,13,7,7,12,10,10,5,5,5,9,9,9,7,7,7,9,9,13,13,7,12,7,5,10,13,9,9,12,3,3,10,9,9,13,13,7,12,12,5,5,10,10,10,12,7,9,9,10,5,5,12,12,1,10,7,3,3,3,13,5,9,9,7,10,10,3,3,3,3~5,5,5,8,8,6,6,9,9,11,11,8,8,12,6,9,1,11,11,5,5,9,9,11,12,12,5,8,8,4,9,9,6,6,6,12,12,12,4,4,4,11,11,5,12,8,8,1,9,9,5,8,11,11,12,6,6,9,9,5,5,5,8,8,12,5,5,11,11,11,4,4,4,9,9,9,4,11,11,11,9,8,12,12~3,3,3,3,8,7,10,10,4,11,3,3,3,10,6,13,1,11,11,11,3,3,10,8,8,7,10,11,8,8,4,13,13,7,7,7,13,13,6,10,3,3,3,10,4,4,13,1,11,11,3,8,8,8,10,7,7,7,13,13,6,6,6,10,8,7,7,13,13,11,4,4,4,10,10,10,3,3,3,11,6,8,8,8~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,6,6,6,13,13,7,11,7,5,8,13,6,9,12,7,7,7,3,3,3,3,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,2,8,10,6,9,1,11,11,5,5,10,9,9,6,6,6,7,10,11,8,8,4,13,13,7,7,7,12,10,6,6,4,11,11,10,12,5,13,1,12,12,3,3,3,3,8,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,6,6,6,13,13,7,11,7,5,8,13,6,9,12,7,7,7,3,3,3,3,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3",
        t: "243",
        reel_set1: "3,3,3,3,8,7,10,10,4,11,3,3,3,10,6,13,1,11,11,3,3,10,8,8,7,10,11,8,6,11,11,11,10,4,13,13,7,7,7,13,13,6,10,3,3,3,10,4,4,13,1,11,11,3,8,8,8,10,7,7,7,13,13,6,6,6,10,8,7,7,13,13,11,4,4,4,10,10,10,3,3,3,11,6,8,8,8~12,12,7,9,5,13,13,7,9,12,3,3,3,3,13,13,13,7,7,12,10,10,5,5,5,9,9,7,10,10,12,12,9,9,9,13,13,7,12,7,5,10,13,9,9,7,7,7,12,3,3,10,9,9,13,13,7,12,12,5,5,10,10,10,12,7,9,9,10,5,5,12,12,1,10,7,3,3,3,13,5,9,9,7,10,10,3,3,3,3~5,5,5,8,8,6,6,9,9,11,11,8,8,12,6,9,1,11,11,5,5,9,9,11,12,12,5,8,6,12,12,12,11,4,9,9,6,6,6,12,12,4,4,4,11,11,5,12,8,8,1,9,9,5,8,11,11,12,6,6,9,9,5,5,5,8,8,12,5,5,11,11,11,4,4,4,9,9,9,4,11,11,11,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,11,3,3,10,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,3,3,7,7,7,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,2,8,10,6,9,1,11,11,5,5,6,6,6,10,9,9,7,10,11,8,6,10,3,3,11,4,13,13,7,7,7,12,10,6,6,4,11,11,10,12,5,13,1,12,12,3,3,3,3,8,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,11,3,3,10,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,3,3,8,8,7,7,7,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3",
        reel_set4: "3,3,3,3,10,10,12,6,6,11,11,5,8,8,3,10,10,5,5,5,12,12,1,8,11,6,6,6,11,10,1,8,11,5,12,12,3,3,3,11,11,10,10,10,5,5,8,8,8,11,11,6,6,6,10,12,12~9,9,7,7,7,13,13,4,10,10,9,4,4,4,10,10,12,7,13,13,3,12,12,4,9,9,4,9,13,13,7,7,7,13,13,1,12,12,3,10,10,10,13,12,4,9,9,3,12,12,13,13,3,3,3,3~6,6,6,13,13,5,8,6,6,11,4,4,9,7,7,7,8,6,9,9,5,13,13,1,8,7,9,4,4,4,11,9,1,9,8,7,7,11,4,13,13,7,7,8,8,5,5,5,9,8,8,4,11,11,7,7~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,9,9,4,13,13,6,6,6,11,4,4,4,4,8,1,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,11,3,3,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,4,10,1,9,8,7,12,12,12,4,3,3,13,13,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,9,9,4,13,13,6,6,6,11,8,1,4,4,4,4,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3",
        purInit: '[{type:"fs",bet:3000}]',
        reel_set3: "3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,4,4,4,6,6,6,13,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,12,12,4,4,4,7,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,13,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,4,4,4,12,12,7,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,6,6,6,13,7,4,4,4,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,12,12,7,4,4,4,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3",
        reel_set6: "3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,10,4,4,4,6,6,6,11,10,1,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,7,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,5,10,6,6,6,4,4,4,11,10,7,9,8,7,12,12,6,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,6,6,6,5,10,4,4,4,11,10,7,6,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3",
        reel_set5: "3,3,3,3,10,10,12,6,6,11,11,5,8,8,3,10,10,5,12,12,1,8,11,6,6,5,5,11,10,1,8,11,5,12,12,3,3,3,11,11,10,10,10,5,5,5,8,8,8,11,11,6,6,6,10,12,12~6,6,6,13,13,5,8,6,6,11,4,4,9,7,7,7,8,6,9,9,5,13,13,1,8,11,5,9,4,4,4,11,9,1,9,8,7,7,11,4,13,13,7,7,8,8,5,5,5,9,8,8,4,11,11,7,7~9,9,7,7,7,13,13,3,3,10,10,9,4,4,10,10,12,7,13,13,3,12,12,7,9,10,4,4,4,9,13,13,7,7,7,13,13,1,12,12,3,10,10,10,13,12,4,9,9,7,12,12,13,13,3,3,3,3~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,10,10,9,4,13,13,4,4,4,4,6,6,6,11,8,1,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,11,3,3,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,4,10,1,9,8,7,12,12,12,4,3,3,13,13,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,10,10,9,4,13,13,6,6,6,11,8,1,4,4,4,4,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3",
        reel_set8: "3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,7,8,4,4,4,11,10,6,9,8,7,12,12,3,6,6,6,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,10,4,4,4,11,6,6,6,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,7,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,1,12,12,4,10,10,5,8,9,2,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,10,4,4,4,11,6,6,6,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3",
        reel_set7: "3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,7,8,11,6,6,6,4,4,4,11,10,6,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,7,12,12,3,3,9,10,10,9,4,4,4,13,13,6,6,6,11,8,1,12,12,4,10,10,5,8,9,2,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,11,6,6,6,4,4,4,11,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,12,7,8,9,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,11,6,6,6,4,4,4,11,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,12,7,8,9,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3",
        total_bet_min: "10.00",
    };

    // API 초기화
    result["stime"] = new Date().getTime();

    // 보관했던 api불러오기
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }

    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        c: "100.00",
        counter: "1",
        index: "1",
        reel_set: "0",
        na: "s",
        l: "40",
        stime: new Date().getTime(),
        s: "3,12,7,10,12,5,3,1,7,12,3,5,8,13,7,12,8,11,7,5,12,6,11,11",
        sa: "3,12,13,11,12,10",
        sb: "10,12,10,6,11,1",
        sh: "4",
        sver: "5",
        tw: "0.00",
        w: "0.00",
    };

    result["c"] = player.betPerLine;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;

    result["index"] = param.index;
    result["counter"] = ++param.counter;
    // 일반 스핀에서의 다음액션 결정
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }
    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            result["reel_set"] = 2;
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        // 프리스핀 처리중
        result["tw"] = player.machine.freeSpinWinMoney;
        result["reel_set"] = 2;
        if (player.machine.isFreeSpinAdd) {
            result["fsmore"] = 5;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
        } else if (player.machine.currentGame == "BASE") {
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsmul_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney;
            result["fsres_total"] = player.machine.freeSpinWinMoney;
        }
    }

    if (player.machine.multiPositions.length > 0) {
        result["slm_mp"] = player.machine.multiPositions.join();
        result["slm_mv"] = player.machine.multiValues.join();
    }
    if (player.machine.lineMultiIndexList.length > 0) {
        result["slm_lmi"] = player.machine.lineMultiIndexList.join();
        result["slm_lmv"] = player.machine.lineMultiValueList.join();
    }

    // 뷰에서 획득한 머니라인
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }

    // 화면위, 아래의 무작위라인
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);

    return result;
};

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
};

module.exports = ApiManager;