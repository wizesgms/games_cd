<!DOCTYPE html>

<link href="assets/chart/bootstrap.css" rel="stylesheet" type="text/css">
<script src="assets/chart/jquery-1.11.3.min.js"></script>
<script src="assets/chart/bootstrap.js"></script>
<script src="assets/chart/canvasjs.min.js"></script>
<style>
    .table_label {
        color: blueviolet;
    }

    #freeSpinCount {
        color: blue;
    }

    #bonusSpinCount {
        color: red;
    }
</style>

<div class="container" style="margin-top:10px;">

    <div class="row">

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">유저머니변경데이터</div>
                <div class="panel-body">

                    <table class="table table-bordered">

                        <tbody>
                            <tr>
                                <td class="table_label">유저코드</td>
                                <td>
                                    <span style="color:red">유저머니 변경 최신순으로 현시</span>
                                    <select id="iPlayerCode" onchange="InitGameSelect()" class="form-control">
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td class="table_label">게임코드</td>
                                <td>
                                    <select id="iGameCode" class="form-control" onchange="DrawTable()">
                                    </select>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                    <div class="checkbox pull-left">
                        <label>
                            <input id="react_allow" type="checkbox">&nbsp;그래프 실시간 갱신
                        </label>
                    </div>
                    <button class="btn btn-success pull-right" onclick="DrawTable()">갱신</button>
                </div>
            </div>

        </div>
    </div>
    <div id="chartContainer" style="height: 370px; width: 100%; margin: 10px auto;"></div>
</div>

<script type="text/javascript">

    $(document).ready(function() {
        Init();
    })

    function Init() {
        InitUserSelect();
    }

    function InitUserSelect() {
        $.get('/players/sven9998', function(res) {
            var htmlStr = '';
            for (let i = 0; i < res.length; i++) {
                htmlStr += `<option value=${res[i].user}>[${res[i].user}]  [${res[i].date}]  [${res[i].game}]</option>`;                
            }
            if (htmlStr == '') {
                htmlStr += `<option>유저가 존재하지 않습니다.</option>`;
            }
            $("#iPlayerCode").html(htmlStr);
            InitGameSelect();
        });
    }

    function InitGameSelect() {
        $.get('/playergames/sven9998', {player_code: $("#iPlayerCode").val()}, function(res) {
            var htmlStr = '';
            for (let i = 0; i < res.length; i++) {
                htmlStr += `<option value=${res[i].game_code}>${res[i].game_name_ko}</option>`;                
            }
            // if (htmlStr == '') {
            //     htmlStr += `<option>유저가 플레이한 게임이 없습니다.</option>`;
            // }
            $("#iGameCode").html(htmlStr);
            DrawTable();
        });
    }

    function DrawTable() {
        $.ajax({
            type: "get",
            url: "/moneydata/sven9998",
            data: {
                player_code: $("#iPlayerCode").val(),
                game_code: $("#iGameCode").val()
            },
            dataType: "json",
            success: function(res) {
                var $data1 = [];
                for (var i = 0; i < res.length; i++) {
                    var obj1 = {
                        label: `${res[i].date}`,
                        y: res[i].money,
                        lineColor: "red",
                        markerColor: "red",
                    };

                    // if (view_history[i].type == "FREE") {
                    //     obj1.indexLabel = "Free";
                    //     obj2.indexLabel = "Free";
                    // } else if (view_history[i].type == "BONUS") {
                    //     obj1.indexLabel = "Bonus";
                    //     obj2.indexLabel = "Bonus";
                    // }

                    $data1.push(obj1);
                }
                var chart = new CanvasJS.Chart("chartContainer", {
                    // animationEnabled: true,
                    zoomEnabled: true,
                    title: {
                        text: "보유금액변동그래프"
                    },
                    axisY: {
                        title: "금액",
                        titleFontColor: "#4F81BC",
                        lineColor: "#4F81BC",
                        labelFontColor: "#4F81BC",
                        tickColor: "#4F81BC",
                        crosshair: {
                            enabled: true,
                            snapToDataPoint: true
                        }
                    },
                    toolTip: {
                        shared: true
                    },
                    legend: {
                        cursor: "pointer",
                        itemmouseover: function (e) {
                            e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness * 2;
                            e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize + 2;
                            e.chart.render();
                        },
                        itemmouseout: function (e) {
                            e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness / 2;
                            e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize - 2;
                            e.chart.render();
                        },
                        itemclick: function (e) {
                            console.log(e);
                            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                                e.dataSeries.visible = false;
                            } else {
                                e.dataSeries.visible = true;
                            }
                            e.chart.render();
                        }
                    },
                    data: [{
                        type: "line",
                        name: "금액",
                        legendText: "금액",
                        // click: onClick,
                        showInLegend: true,
                        dataPoints: $data1
                    }]
                });
                chart.render();
            },
            error: function(err) {
                console.log(err);
            }
        });
    }

    DrawTable();
    

    $data1 = [];
    $data2 = [];

    var canvas;
    function toggleDataSeries(e) {
        if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
            e.dataSeries.visible = false;
        }
        else {
            e.dataSeries.visible = true;
        }
        chart.render();
    }

    function refreshPredictGraph() {
        chart = new CanvasJS.Chart("chartContainer", {
            // animationEnabled: true,
            zoomEnabled: true,
            title: {
                text: "보유금액변동그래프"
            },
            axisY: {
                title: "금액",
                titleFontColor: "#4F81BC",
                lineColor: "#4F81BC",
                labelFontColor: "#4F81BC",
                tickColor: "#4F81BC",
                crosshair: {
                    enabled: true,
                    snapToDataPoint: true
                }
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                itemmouseover: function (e) {
                    e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness * 2;
                    e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize + 2;
                    e.chart.render();
                },
                itemmouseout: function (e) {
                    e.dataSeries.lineThickness = e.chart.data[e.dataSeriesIndex].lineThickness / 2;
                    e.dataSeries.markerSize = e.chart.data[e.dataSeriesIndex].markerSize - 2;
                    e.chart.render();
                },
                itemclick: function (e) {
                    console.log(e);
                    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                        e.dataSeries.visible = false;
                    } else {
                        e.dataSeries.visible = true;
                    }
                    e.chart.render();
                }
            },
            data: [{
                type: "line",
                name: "금액",
                legendText: "금액",
                click: onClick,
                showInLegend: true,
                dataPoints: $data1
            }]
        });
        chart.render();
    }

    function refreshPredictWin() {
        chart = new CanvasJS.Chart("chartContainer1", {
            // animationEnabled: true,
            zoomEnabled: true,
            title: {
                text: "당첨내역"
            },
            axisY: {
                title: "당첨액",
                titleFontColor: "#4F81BC",
                lineColor: "#4F81BC",
                labelFontColor: "#4F81BC",
                tickColor: "#4F81BC",
                crosshair: {
                    enabled: true,
                    snapToDataPoint: true
                }
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                itemclick: toggleDataSeries
            },
            data: [{
                type: 'line',
                name: "당첨액",
                legendText: "당첨액",
                click: onClick,
                showInLegend: true,
                dataPoints: $data2
            }]
        });
        chart.render();
    }

    function DrawTableInterval() {
        if (Number($("#react_allow")[0].checked) == 1) {
            DrawTable();
        }
    }
    setInterval(DrawTableInterval, 2000);
    
</script>